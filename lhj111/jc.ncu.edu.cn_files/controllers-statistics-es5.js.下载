'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

angular.module('myApp.controllers_statistics_entry', []).controller('statistics_entryCtrl', ['$scope', '$rootScope', '$http', '$timeout', '$routeParams', function ($scope, $rootScope, $http, $timeout, $routeParams) {
    // 加载token
    $rootScope.otherPageInit();
    $scope.goto_back_school = function () {
        $rootScope.go('/statistics/back_school');
    };
    $scope.goto_detail = function () {
        $rootScope.go('/statistics/details');
    };
    $scope.goto_apply = function () {
        $rootScope.go('/statistics/apply');
    };
    $scope.goto_person = function () {
        $rootScope.go('/statistics/person');
    };
}]);

angular.module('myApp.controllers_statistics_back_school', []).controller('statistics_back_schoolCtrl', ['$scope', '$rootScope', '$http', '$timeout', '$routeParams', function ($scope, $rootScope, $http, $timeout, $routeParams) {
    window.document.title = '学生返校统计';

    // 返校批次日期
    $scope.backDateList = ['2020-04-16', '2020-05-07', '2020-05-08', '2020-05-09', '2020-05-10', '2020-05-11', '2020-05-12', '2020-05-29', '2020-05-30'];
    $scope.localNowDay = moment(new Date()).format('YYYY-MM-DD');
    // if (!!$scope.backDateList.indexOf($scope.localNowDay)) {
    //     $scope.backDate = $scope.backDateList[0];
    // }else {
    $scope.backDate = $scope.backDateList[$scope.backDateList.length - 1];
    // }
    $scope.serverNowDay = '';
    $scope.serverNowTime = '';
    $scope.chartData = {};
    $scope.logList = {};
    $scope.collegeBackSchoolCounts = {};
    $scope.collegeBackSchoolSum = {};
    $scope.currnetBackDate = "返校批次日期";

    $scope.currentCampus = '100002';

    jQuery(document).on('click', '.switch-campus .dropdown-item', function (e) {
        $scope.$apply(function ($scope) {
            $scope.currentCampus = jQuery(e.target).attr('data-id');
        });
        $scope.getRecentLogWithHours(function () {
            var option = $scope.chart2.getOption();
            option.series[0].data = $scope.chartData.logWithHoursList.map(function (item) {
                return item.count;
            });
            $scope.chart2.setOption(option);
        });
    });

    // 切换批次
    jQuery(document).on('click', '.switch-batch .dropdown-item', function (e) {
        $scope.$apply(function ($scope) {
            $scope.currnetBackDate = e.target.innerHTML;
            $scope.backDate = e.target.innerHTML;
            $scope.pageInit();
        });
    });

    $scope.getBackSchoolCounts = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/gate/getBackSchoolCounts',
            // url: $rootScope.apiUrl + ':8087/statistics/gate/getBackSchoolCounts',
            method: 'post',
            traditional: true,
            data: {
                back_date: $scope.backDate
            },
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).complete(function (xhr) {
            var response = xhr.responseJSON;
            var server_time = xhr.getResponseHeader('server_time');
            // if(server_time) {
            var serverNowDate = moment(parseInt(server_time)).tz("Asia/Shanghai");
            $scope.$apply(function ($scope) {
                $scope.serverNowDay = serverNowDate.format('YYYY-MM-DD');
                $scope.serverNowTime = serverNowDate.format('HH:mm');
            });
            // }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.chartData = response.data;
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };

    $scope.getCampusBackSchoolInfo = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/gate/getCampusBackSchoolInfo',
            // url: $rootScope.apiUrl + ':8087/statistics/gate/getCampusBackSchoolInfo',
            method: 'post',
            traditional: true,
            data: {
                back_date: $scope.backDate
            },
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.chartData = Object.assign($scope.chartData, { backSchoolList: response.data });
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };

    $scope.getRecentLog = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/gate/gatelog/getStudentRecentLog',
            // url: $rootScope.apiUrl + ':8086/gate/gatelog/getStudentRecentLog',
            method: 'post',
            traditional: true,
            data: {
                back_date: $scope.backDate
            },
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                var logListData = response.data;
                response.data.forEach(function (item, key) {
                    logListData[key] = item;

                    var name = item.userName.split('');
                    name = name.map(function (item, key) {
                        return key < 1 ? item : '*';
                    });
                    logListData[key]['userName'] = name.join('');
                });
                $scope.$apply(function ($scope) {
                    $scope.logList = logListData;
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };

    $scope.getRecentLogWithHours = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/gate/getCampusBackSchoolInfoWithHours',
            // url: $rootScope.apiUrl + ':8087/statistics/gate/getCampusBackSchoolInfoWithHours',
            method: 'post',
            traditional: true,
            data: {
                campus_id: $scope.currentCampus,
                back_date: $scope.backDate
            },
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.chartData = Object.assign($scope.chartData, { logWithHoursList: response.data });
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };

    $scope.getCollegeBackSchoolCounts = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/gate/getCollegeBackSchoolCounts',
            // url: $rootScope.apiUrl + ':8087/statistics/gate/getCampusBackSchoolInfoWithHours',
            method: 'post',
            traditional: true,
            data: {
                back_date: $scope.backDate
            },
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    var data = response.data.filter(function (item) {
                        return item.deptName != null;
                    });
                    var backSchoolList = [];
                    data.forEach(function (item) {
                        backSchoolList.push({
                            oddRow: true,
                            deptName: item.deptName,
                            RealCountTol: parseInt(item.undergraduateRealCount) + parseInt(item.postgraduateRealCount),
                            TotalTol: parseInt(item.undergraduateTotal) + parseInt(item.postgraduateTotal)
                        });
                        backSchoolList.push({
                            evenRow: true,
                            undergraduateRealCount: item.undergraduateRealCount,
                            undergraduateTotal: item.undergraduateTotal,
                            postgraduateRealCount: item.postgraduateRealCount,
                            postgraduateTotal: item.postgraduateTotal
                        });
                    });
                    $scope.collegeBackSchoolCounts = backSchoolList;
                    var collegeBackSchoolSum = data.map(function (item) {
                        return item.total;
                    }).reduce(function (a, b) {
                        return parseInt(a) + parseInt(b);
                    });
                    $scope.collegeBackSchoolSum = collegeBackSchoolSum;

                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };

    $scope.listInit = function () {
        $scope.pageInit = function () {
            $scope.getBackSchoolCounts(function () {
                $scope.getCampusBackSchoolInfo(function () {
                    $scope.getRecentLogWithHours(function () {
                        $scope.renderChart();
                    });
                });
            });
            $scope.getRecentLog();
            $scope.getCollegeBackSchoolCounts();
        };
    };

    $rootScope.getUserData();
    $rootScope.getToken(function () {
        if (!$rootScope.work_weixin.token) {
            $rootScope.otherPageInit(function () {
                $scope.listInit();
            });
        } else {
            $scope.listInit();
        }
    });

    $scope.getCampusBackSchoolItem = function (val) {
        if ($scope.chartData.backSchoolList.filter(function (item) {
            return item.campusType == val;
        })[0]) {
            return $scope.chartData.backSchoolList.filter(function (item) {
                return item.campusType == val;
            })[0].count;
        } else {
            return 0;
        }
    };

    $scope.renderChart = function () {
        $scope.chartOptions1 = {
            color: ['#3EAAFF', '#FF9900'],
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow'
                }
            },
            xAxis: [_extends({}, $rootScope.echarts.commonConfig.xAxis, {
                data: $rootScope.echarts.chartCampusList.map(function (item) {
                    return item.name;
                })
            })],
            yAxis: [_extends({}, $rootScope.echarts.commonConfig.yAxis, {
                offset: -10
            })],
            series: [{
                name: '实际',
                type: 'bar',
                barWidth: '8px',
                itemStyle: {
                    barBorderRadius: [4, 4, 0, 0]
                },
                barGap: '20%',
                data: [$scope.getCampusBackSchoolItem('100002_real'), $scope.getCampusBackSchoolItem('100004_real'), $scope.getCampusBackSchoolItem('100003_real'), $scope.getCampusBackSchoolItem('100001_real')]
            }, {
                name: '计划',
                type: 'bar',
                barWidth: '8px',
                itemStyle: {
                    barBorderRadius: [4, 4, 0, 0]
                },
                data: [$scope.getCampusBackSchoolItem('100002_total'), $scope.getCampusBackSchoolItem('100004_total'), $scope.getCampusBackSchoolItem('100003_total'), $scope.getCampusBackSchoolItem('100001_total')]
            }]
        };

        $scope.chart1 = echarts.init(document.querySelector('.chart1'));
        $scope.chart1.setOption($scope.chartOptions1);

        $scope.chartOptions2 = {
            color: ['#3EAAFF'],
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow'
                }
            },
            dataZoom: [{
                id: 'dataZoomX',
                type: 'slider',
                xAxisIndex: [0],
                filterMode: 'filter',
                start: 30,
                end: 70
            }],
            xAxis: [_extends({}, $rootScope.echarts.commonConfig.xAxis, {
                data: $scope.chartData.logWithHoursList.map(function (item) {
                    return item.time;
                })
            })],
            yAxis: [_extends({}, $rootScope.echarts.commonConfig.yAxis, {
                offset: -10
            })],
            series: [{
                name: '入校人数',
                type: 'bar',
                barWidth: '8px',
                itemStyle: {
                    barBorderRadius: [4, 4, 0, 0]
                },
                barGap: '20%',
                data: $scope.chartData.logWithHoursList.map(function (item) {
                    return item.count;
                })
            }]
        };

        $scope.chart2 = echarts.init(document.querySelector('.chart2'));
        $scope.chart2.setOption($scope.chartOptions2);
    };
}]);

angular.module('myApp.controllers_statistics_details', []).controller('statistics_detailsCtrl', ['$scope', '$rootScope', '$http', '$timeout', '$routeParams', function ($scope, $rootScope, $http, $timeout, $routeParams) {
    window.document.title = '人员信息统计';

    $scope.yellowAndRedList = [];
    $scope.collegeBackSchoolCounts = {};
    $scope.chartData = {};
    $scope.typeDataUG = {};
    $scope.typeDataPG = {};
    $scope.summary = {};
    $scope.typeList = ['在校', '不在校', '隔离', '请假外出'];
    $scope.ugBackSchoolList = []; // 本科生返校明细
    $scope.pgBackSchoolList = []; // 研究生返校明细

    $scope.yellowAndRedList = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/ctm/yellowAndRedList',
            // url: $rootScope.apiUrl + ':8087/statistics/ctm/yellowAndRedList',
            method: 'post',
            traditional: true,
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.yellowAndRedList = response.data;
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };
    $scope.getCollegeBackSchoolCounts = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/gate/getCollegeBackSchoolCounts',
            // url: $rootScope.apiUrl + ':8087/statistics/gate/getCampusBackSchoolInfoWithHours',
            method: 'post',
            traditional: true,
            data: {
                back_date: $scope.backDate
            },
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    var data = response.data.filter(function (item) {
                        return item.deptName != null;
                    });
                    var backSchoolList = [];
                    data.forEach(function (item) {
                        backSchoolList.push({
                            oddRow: true,
                            deptName: item.deptName,
                            RealCountTol: parseInt(item.undergraduateRealCount) + parseInt(item.postgraduateRealCount),
                            TotalTol: parseInt(item.undergraduateTotal) + parseInt(item.postgraduateTotal)
                        });
                        backSchoolList.push({
                            evenRow: true,
                            undergraduateRealCount: item.undergraduateRealCount,
                            undergraduateTotal: item.undergraduateTotal,
                            postgraduateRealCount: item.postgraduateRealCount,
                            postgraduateTotal: item.postgraduateTotal
                        });
                    });
                    $scope.collegeBackSchoolCounts = backSchoolList;
                    var collegeBackSchoolSum = data.map(function (item) {
                        return item.total;
                    }).reduce(function (a, b) {
                        return parseInt(a) + parseInt(b);
                    });
                    $scope.collegeBackSchoolSum = collegeBackSchoolSum;

                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };

    $scope.getStudentSummary = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/student/summary',
            // url: $rootScope.apiUrl + ':8087/statistics/gate/getSignCountsWithArea',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                response.data;
                $scope.$apply(function ($scope) {
                    $scope.summary = response.data;
                    $scope.typeDataUG = [{
                        value: response.data.ugInSchoolCount,
                        name: $scope.typeList[0]
                    }, {
                        value: response.data.ugLeaveCount,
                        name: $scope.typeList[1]
                    }, {
                        value: response.data.ugIsolateCount,
                        name: $scope.typeList[2]
                    }, {
                        value: response.data.ugNotInSchoolCount,
                        name: $scope.typeList[3]
                    }];
                    $scope.typeDataPG = [{
                        value: response.data.pgInSchoolCount,
                        name: $scope.typeList[0]
                    }, {
                        value: response.data.pgLeaveCount,
                        name: $scope.typeList[1]
                    }, {
                        value: response.data.pgIsolateCount,
                        name: $scope.typeList[2]
                    }, {
                        value: response.data.pgNotInSchoolCount,
                        name: $scope.typeList[3]
                    }];
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };

    $scope.renderChart = function () {
        $scope.chartOptions1 = {
            color: $rootScope.echarts.color,
            tooltip: {
                trigger: 'item',
                formatter: '{b}<br/>{c} ({d}%)'
            },
            grid: {
                // left: '80%'
                // right: 0
            },
            series: [{
                name: '类型',
                type: 'pie',
                radius: '50%',
                center: ['50%', '50%'],
                data: $scope.typeDataUG,
                emphasis: {
                    itemStyle: {
                        shadowBlur: 10,
                        shadowOffsetX: 0,
                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                    }
                }
            }]
        };

        $scope.chart1 = echarts.init(document.querySelector('.chart1'));
        $scope.chart1.setOption($scope.chartOptions1);

        $scope.chartOptions2 = {
            color: $rootScope.echarts.color,
            tooltip: {
                trigger: 'item',
                formatter: '{b}<br/>{c} ({d}%)'
            },
            grid: {
                // left: '80%'
                // right: 0
            },
            series: [{
                name: '类型',
                type: 'pie',
                radius: '50%',
                center: ['50%', '50%'],
                data: $scope.typeDataPG,
                emphasis: {
                    itemStyle: {
                        shadowBlur: 10,
                        shadowOffsetX: 0,
                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                    }
                }
            }]
        };

        $scope.chart2 = echarts.init(document.querySelector('.chart2'));
        $scope.chart2.setOption($scope.chartOptions2);
    };

    $scope.ugBackSchool = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/student/ugBackSchoolInfoWithDept',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.ugBackSchoolList = response.data;
                });
            }
        });
    };

    $scope.pgBackSchool = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/student/pgBackSchoolInfoWithDept',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.pgBackSchoolList = response.data;
                });
            }
        });
    };

    $scope.listInit = function () {
        $scope.pageInit = function () {
            $scope.yellowAndRedList();
            $scope.ugBackSchool();
            $scope.pgBackSchool();
            // $scope.getCollegeBackSchoolCounts();
            $scope.getStudentSummary(function () {
                // $scope.renderChart();
            });
        };
    };

    $rootScope.getUserData();
    $rootScope.getToken(function () {
        if (!$rootScope.work_weixin.token) {
            $rootScope.otherPageInit(function () {
                $scope.listInit();
            });
        } else {
            $scope.listInit();
        }
    });
}]);

angular.module('myApp.controllers_statistics_apply', []).controller('statistics_applyCtrl', ['$scope', '$rootScope', '$http', '$timeout', '$routeParams', function ($scope, $rootScope, $http, $timeout, $routeParams) {
    window.document.title = '校园管控统计';

    $scope.serverNowDay = '';
    $scope.serverNowTime = '';
    $scope.chartData = {};
    $scope.chartHourMax = {};
    $scope.chartHourMaxList = [];
    $scope.recentLog = [];

    $scope.getInSchoolCounts = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/gate/getInSchoolCounts',
            // url: $rootScope.apiUrl + ':8087/statistics/gate/getInSchoolCounts',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).complete(function (xhr) {
            var response = xhr.responseJSON;
            var server_time = xhr.getResponseHeader('server_time');
            if (server_time) {
                var serverNowDate = moment(parseInt(server_time)).tz("Asia/Shanghai");
                $scope.$apply(function ($scope) {
                    $scope.serverNowDay = serverNowDate.format('YYYY-MM-DD');
                    $scope.serverNowTime = serverNowDate.format('HH:mm');
                });
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.chartData = response.data;
                    $scope.chartHourCount = Object.entries($scope.chartData.hourCount);
                    $scope.chartHourCount.sort(function (a, b) {
                        return parseInt(a[0].match(/(\d*)/g)[0]) - parseInt(b[0].match(/(\d*)/g)[0]);
                    });
                    // 时间段人数最大值
                    angular.copy($scope.chartHourCount, $scope.chartHourMaxList);
                    $scope.chartHourMaxList.sort(function (a, b) {
                        return parseInt(b[1]) - parseInt(a[1]);
                    });
                    $scope.chartHourMax = $scope.chartHourMaxList[0];
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };
    $scope.getRecentLog = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/gate/gatelog/getRecentLog',
            // url: $rootScope.apiUrl + ':8086/gate/gatelog/getRecentLog',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.recentLogData = response.data;
                // let recentLogData = [];
                // response.data.forEach((item, key) => {
                //     recentLogData[key] = item;
                //
                //     let name = item.userName.split('');
                //     name = name.map((item, key) => {
                //         return key < 1 ? item : '*';
                //     });
                //     recentLogData[key]['userName'] = name.join('');
                //     recentLogData[key]['gateName'] = $rootScope.echarts.gateId[item.gateId];
                // });
                // $scope.$apply($scope => {
                //     $scope.recentLog = recentLogData
                // });
                callback && callback();
            } else {
                alert(response.message);
            }
        });
    };

    $scope.getVisitorCounts = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/visitor/getVisitorCounts',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.visitorCounts = response.data;
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };

    $scope.getVisitorGetInWithHours = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/visitor/getVisitorGetInWithHours',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.chartVisitorHourCount = response.data;
                    $scope.chartVisitorHourCount.sort(function (a, b) {
                        return parseInt(a.time.match(/(\d*)/g)[0]) - parseInt(b.time.match(/(\d*)/g)[0]);
                    });
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };

    $scope.getVisitorGetInInfo = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/visitor/getVisitorGetInInfo',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                var data = [].concat(_toConsumableArray($scope.recentLogData), _toConsumableArray(response.data));
                // let data = $scope.recentLogData;
                var recentLogData = [];
                data.forEach(function (item, key) {
                    recentLogData[key] = item;

                    var name = item.userName.split('');
                    name = name.map(function (item, key) {
                        return key < 1 ? item : '*';
                    });
                    recentLogData[key]['userName'] = name.join('');
                    recentLogData[key]['gateName'] = item.gateName ? item.gateName : $rootScope.echarts.gateId[item.gateId];
                });

                recentLogData.sort(function (a, b) {
                    return a.createTime < b.createTime ? 1 : -1;
                });
                $scope.$apply(function ($scope) {
                    $scope.recentLog = recentLogData;
                    // $scope.chartData = Object.assign( $scope.chartData, {recentLog: recentLogData} );
                    console.info($scope.chartData.recentLog);
                });
                callback && callback();
            } else {
                alert(response.message);
            }
        });
    };

    $scope.getTodayOpenCardIdCounts = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/gate/getTodayOpenCardIdCounts',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.todayOpenCardId = response.data;
                });
                callback && callback();
            } else {
                alert(response.message);
            }
        });
    };

    $scope.listInit = function () {
        $scope.getTodayOpenCardIdCounts();
        $scope.getVisitorCounts();
        $scope.getVisitorGetInWithHours();
        $scope.getInSchoolCounts(function () {
            $scope.renderChart();
        });
        $scope.getRecentLog(function () {
            $scope.getVisitorGetInInfo();
        });
    };

    $rootScope.getUserData();
    $rootScope.getToken(function () {
        if (!$rootScope.work_weixin.token) {
            $rootScope.otherPageInit(function () {
                $scope.listInit();
            });
        } else {
            $scope.listInit();
        }
    });

    $scope.renderChart = function () {
        // 柱状图 各校区人数
        $scope.chartOptions1 = {
            color: ['#3EAAFF', '#FF9900'],
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow'
                }
            },
            xAxis: [_extends({}, $rootScope.echarts.commonConfig.xAxis, {
                data: $rootScope.echarts.chartCampusList.map(function (item) {
                    return item.name;
                })
            })],
            yAxis: [_extends({}, $rootScope.echarts.commonConfig.yAxis, {
                offset: -10
            })],
            series: [{
                name: '师生人数',
                type: 'bar',
                barWidth: '8px',
                barGap: '20%',
                stack: '人数',
                data: [$scope.chartData.qhb, $scope.chartData.qhn, $scope.chartData.dh, $scope.chartData.qsh]
            }, {
                name: '访客人数',
                type: 'bar',
                barWidth: '8px',
                itemStyle: {
                    barBorderRadius: [4, 4, 0, 0]
                },
                barGap: '20%',
                stack: '人数',
                data: [$scope.visitorCounts.qhb, $scope.visitorCounts.qhn, $scope.visitorCounts.dh, $scope.visitorCounts.qsh]
            }]
        };

        $scope.chart1 = echarts.init(document.querySelector('.chart1'));
        $scope.chart1.setOption($scope.chartOptions1);

        // 时间轴柱状图 各时段
        $scope.chartOptions2 = {
            color: ['#3EAAFF', '#FF9900'],
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow'
                }
            },
            dataZoom: [{
                id: 'dataZoomX',
                type: 'slider',
                xAxisIndex: [0],
                filterMode: 'filter',
                start: 30,
                end: 70
            }],
            xAxis: [_extends({}, $rootScope.echarts.commonConfig.xAxis, {
                data: $scope.chartHourCount.map(function (item) {
                    return item[0];
                })
            })],
            yAxis: [_extends({}, $rootScope.echarts.commonConfig.yAxis, {
                offset: -10
            })],
            series: [{
                name: '师生人数',
                type: 'bar',
                barWidth: '8px',
                barGap: '20%',
                stack: '人数',
                data: $scope.chartHourCount.map(function (item) {
                    return item[1];
                })
            }, {
                name: '访客人数',
                type: 'bar',
                barWidth: '8px',
                itemStyle: {
                    barBorderRadius: [4, 4, 0, 0]
                },
                barGap: '20%',
                stack: '人数',
                data: $scope.chartVisitorHourCount.map(function (item) {
                    return item.count;
                })
            }]
        };

        $scope.chart2 = echarts.init(document.querySelector('.chart2'));
        $scope.chart2.setOption($scope.chartOptions2);

        $scope.chartOptions3 = {
            color: $rootScope.echarts.color,
            tooltip: {
                trigger: 'item',
                formatter: '{b}<br/>{c} ({d}%)'
            },
            series: [{
                name: '人员',
                type: 'pie',
                radius: '50%',
                center: ['50%', '50%'],
                emphasis: {
                    itemStyle: {
                        shadowBlur: 10,
                        shadowOffsetX: 0,
                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                    }
                },
                data: [{
                    value: $scope.chartData.student,
                    name: '学生'
                }, {
                    value: $scope.chartData.teacher,
                    name: '教职工'
                }, {
                    value: $scope.chartData.b,
                    name: 'B类人员'
                }, {
                    value: $scope.chartData.temp,
                    name: '临时人员'
                }, {
                    value: $scope.visitorCounts.visitorCounts,
                    name: '访客'
                }]
            }]
        };

        $scope.chart3 = echarts.init(document.querySelector('.chart3'));
        $scope.chart3.setOption($scope.chartOptions3);
    };
}]);

angular.module('myApp.controllers_statistics_person', []).controller('statistics_personCtrl', ['$scope', '$rootScope', '$http', '$timeout', '$routeParams', function ($scope, $rootScope, $http, $timeout, $routeParams) {
    document.title = '人员分析统计';

    $scope.serverNowDay = '';
    $scope.serverNowTime = '';
    $scope.chartData = {};
    $scope.areaDataCount = 0;
    $scope.signPercent = 0;

    $scope.getSignCounts = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/gate/getSignCounts',
            // url: $rootScope.apiUrl + ':8087/statistics/gate/getSignCounts',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).complete(function (xhr) {
            var response = xhr.responseJSON;
            var server_time = xhr.getResponseHeader('server_time');
            if (server_time) {
                var serverNowDate = moment(parseInt(server_time)).tz("Asia/Shanghai");
                $scope.$apply(function ($scope) {
                    $scope.serverNowDay = serverNowDate.format('YYYY-MM-DD');
                    $scope.serverNowTime = serverNowDate.format('HH:mm');
                });
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.chartData = response.data;
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };
    $scope.getRecentDaysSignCounts = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/gate/getRecentDaysSignCounts',
            // url: $rootScope.apiUrl + ':8087/statistics/gate/getRecentDaysSignCounts',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.chartData = Object.assign($scope.chartData, response.data);
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };
    $scope.getSignCountsInKeyArea = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/gate/getSignCountsInKeyArea',
            // url: $rootScope.apiUrl + ':8087/statistics/gate/getSignCountsInKeyArea',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.keyArea = response.data;
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };
    $scope.getSignCountsWithArea = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/statistics/gate/getSignCountsWithArea',
            // url: $rootScope.apiUrl + ':8087/statistics/gate/getSignCountsWithArea',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    var areaData = [];
                    response.data.forEach(function (item, key) {
                        areaData[key] = {
                            value: item.count,
                            name: item.address_province
                        };
                    });
                    // areaData[areaData.length] = {
                    //     value: $scope.chartData.totalSign - response.data.map(item => item.count).reduce((a, b) => {return parseInt(a)+parseInt(b)}),
                    //     name: '其他'
                    // };
                    $scope.chartData = Object.assign($scope.chartData, { areaData: areaData });
                    $scope.areaDataCount = $scope.chartData.areaData.map(function (item) {
                        return item.value;
                    }).reduce(function (a, b) {
                        return parseInt(a) + parseInt(b);
                    });
                    $scope.signPercent = ($scope.chartData.totalSign / $rootScope.echarts.totalSign * 100).toFixed(1);
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };
    $scope.getRecentSignInfo = function (callback) {
        jQuery.ajax({
            url: $rootScope.apiUrl + '/gate/sign/getRecentSignInfo',
            // url: $rootScope.apiUrl + ':8086/gate/sign/getRecentSignInfo',
            method: 'post',
            data: {},
            headers: {
                "token": $rootScope.work_weixin.token
            }
        }).then(function (response) {
            if (response.code == 0) {
                $scope.$apply(function ($scope) {
                    $scope.chartData = Object.assign($scope.chartData, { signInfo: response.data });
                    callback && callback();
                });
            } else {
                alert(response.message);
            }
        });
    };

    $scope.listInit = function () {
        $scope.getSignCountsInKeyArea();
        $scope.getSignCounts(function () {
            $scope.getRecentDaysSignCounts(function () {
                $scope.getSignCountsWithArea(function () {
                    // $scope.getRecentSignInfo(() => {
                    $scope.renderChart();
                    // });
                });
            });
        });
    };

    $rootScope.getUserData();
    $rootScope.getToken(function () {
        if (!$rootScope.work_weixin.token) {
            $rootScope.otherPageInit(function () {
                $scope.listInit();
            });
        } else {
            $scope.listInit();
        }
    });

    $scope.renderChart = function () {
        $scope.chartOption4 = {
            backgroundColor: "#fff",
            color: ["#3EAAFF"],
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow'
                }
            },
            xAxis: [_extends({}, $rootScope.echarts.commonConfig.xAxis, {
                data: [moment().subtract('days', 6).format('MM.DD'), moment().subtract('days', 5).format('MM.DD'), moment().subtract('days', 4).format('MM.DD'), moment().subtract('days', 3).format('MM.DD'), moment().subtract('days', 2).format('MM.DD'), '昨天', '今天']
            })],
            yAxis: [_extends({}, $rootScope.echarts.commonConfig.yAxis, {
                offset: -10,
                scale: true
            })],
            series: [{
                name: '打卡次数',
                type: 'line',
                data: [$scope.chartData.seventhCount, $scope.chartData.sixthCount, $scope.chartData.fifthCount, $scope.chartData.fourthCount, $scope.chartData.thirdCount, $scope.chartData.yesterdaySign, $scope.chartData.totalSign]
            }]
        };

        $scope.chart4 = echarts.init(document.querySelector('.chart4'));
        $scope.chart4.setOption($scope.chartOption4);

        $scope.chartOptions3 = {
            color: $rootScope.echarts.color,
            tooltip: {
                trigger: 'item',
                formatter: '{b}<br/>{c} ({d}%)'
            },
            grid: {
                // left: '80%'
                // right: 0
            },
            series: [{
                name: '地区',
                type: 'pie',
                radius: '50%',
                center: ['50%', '50%'],
                data: $scope.chartData.areaData,
                emphasis: {
                    itemStyle: {
                        shadowBlur: 10,
                        shadowOffsetX: 0,
                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                    }
                }
            }]
        };

        $scope.chart3 = echarts.init(document.querySelector('.chart3'));
        $scope.chart3.setOption($scope.chartOptions3);
    };
}]);
